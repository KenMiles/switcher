//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SwitcherUi.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ISwitchingService")]
    public interface ISwitchingService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISwitchingService/SetJavaHome", ReplyAction="http://tempuri.org/ISwitchingService/SetJavaHomeResponse")]
        string SetJavaHome(string javaVersion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISwitchingService/SetJavaHome", ReplyAction="http://tempuri.org/ISwitchingService/SetJavaHomeResponse")]
        System.Threading.Tasks.Task<string> SetJavaHomeAsync(string javaVersion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISwitchingService/SetJavaEnvVars", ReplyAction="http://tempuri.org/ISwitchingService/SetJavaEnvVarsResponse")]
        void SetJavaEnvVars();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISwitchingService/SetJavaEnvVars", ReplyAction="http://tempuri.org/ISwitchingService/SetJavaEnvVarsResponse")]
        System.Threading.Tasks.Task SetJavaEnvVarsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISwitchingService/StartDatabase", ReplyAction="http://tempuri.org/ISwitchingService/StartDatabaseResponse")]
        string[] StartDatabase(string database);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISwitchingService/StartDatabase", ReplyAction="http://tempuri.org/ISwitchingService/StartDatabaseResponse")]
        System.Threading.Tasks.Task<string[]> StartDatabaseAsync(string database);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISwitchingService/StopDatabase", ReplyAction="http://tempuri.org/ISwitchingService/StopDatabaseResponse")]
        string[] StopDatabase(string database);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISwitchingService/StopDatabase", ReplyAction="http://tempuri.org/ISwitchingService/StopDatabaseResponse")]
        System.Threading.Tasks.Task<string[]> StopDatabaseAsync(string database);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISwitchingServiceChannel : SwitcherUi.ServiceReference1.ISwitchingService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SwitchingServiceClient : System.ServiceModel.ClientBase<SwitcherUi.ServiceReference1.ISwitchingService>, SwitcherUi.ServiceReference1.ISwitchingService {
        
        public SwitchingServiceClient() {
        }
        
        public SwitchingServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SwitchingServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SwitchingServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SwitchingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string SetJavaHome(string javaVersion) {
            return base.Channel.SetJavaHome(javaVersion);
        }
        
        public System.Threading.Tasks.Task<string> SetJavaHomeAsync(string javaVersion) {
            return base.Channel.SetJavaHomeAsync(javaVersion);
        }
        
        public void SetJavaEnvVars() {
            base.Channel.SetJavaEnvVars();
        }
        
        public System.Threading.Tasks.Task SetJavaEnvVarsAsync() {
            return base.Channel.SetJavaEnvVarsAsync();
        }
        
        public string[] StartDatabase(string database) {
            return base.Channel.StartDatabase(database);
        }
        
        public System.Threading.Tasks.Task<string[]> StartDatabaseAsync(string database) {
            return base.Channel.StartDatabaseAsync(database);
        }
        
        public string[] StopDatabase(string database) {
            return base.Channel.StopDatabase(database);
        }
        
        public System.Threading.Tasks.Task<string[]> StopDatabaseAsync(string database) {
            return base.Channel.StopDatabaseAsync(database);
        }
    }
}
